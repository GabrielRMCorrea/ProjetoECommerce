// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model products {
  productId   Int        @id @default(autoincrement())
  productName String     @db.NVarChar(255)
  stockQty    Int
  categoryId  Int
  //relation
  categories  categories @relation(fields: [categoryId], references: [categoryId])
  carts       carts[]
}

model categories {
  categoryId   Int        @id @default(autoincrement())
  categoryName String     @db.NVarChar(255)
  //relations
  product      products[]
}

model users {
  userId       Int     @id @default(autoincrement())
  userFullName String  @db.NVarChar(255)
  email        String  @db.NVarChar(255) @unique
  password     String  @db.NVarChar(255)
  isAdmin      Boolean @default(false)
  carts        carts[]
}

model carts {
  cartId     Int      @id @default(autoincrement())
  shopQty    Int
  assignedAt DateTime @default(now())
  productId  Int
  userId     Int
  //relations
  product    products @relation(fields: [productId], references: [productId], onDelete: Cascade)
  user       users    @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@unique([productId, userId])
}
